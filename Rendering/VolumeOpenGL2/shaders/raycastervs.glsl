#version 330 core

//////////////////////////////////////////////////////////////////////////////
///
/// Uniforms, attributes, and globals
///
//////////////////////////////////////////////////////////////////////////////
@BASE_GLOBALS_VERT@
@TERMINATION_GLOBALS_VERT@
@CROPPING_GLOBALS_VERT@
@SHADING_GLOBALS_VERT@

//////////////////////////////////////////////////////////////////////////////
///
/// Inputs
///
//////////////////////////////////////////////////////////////////////////////
layout(location = 0) in vec3 m_in_vertex_pos;

//////////////////////////////////////////////////////////////////////////////
///
/// Outputs
///
//////////////////////////////////////////////////////////////////////////////
/// 3D texture coordinates for texture lookup in the fragment shader
out vec3 m_texture_coords;
out vec3 m_vertex_pos;

void main()
{
  /// Get clipspace position
  @COMPUTE_CLIP_POS@

  /// Compute texture coordinates
  @COMPUTE_TEXTURE_COORDS@

  /// Copy incoming vertex position for the fragment shader
  m_vertex_pos = m_in_vertex_pos;
}
